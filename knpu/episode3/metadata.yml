title:  "OOP (ep 3): Inheritance, Traits, Interfaces and other amazing things"
summary: |
    Things are about to get crazy.

    You've learned the basics ([Episode 1](http://knpuniversity.com/screencast/oo)).
    Heck, you even mastered service objects, model objects and service containers
    in [Episode 2](http://knpuniversity.com/screencast/oo-ep2)!

    Now we're getting into the meat of OO:

    * Class inheritance!
    * What is an interface? How can I leverage them?
    * What about abstract classes?
    * Introducing the "protected" visibility
    * Traits for code-reuse!

    This stuff will start to separate you from a beginner OO developer to someone
    who can really understand and flex OO code. It's hard stuff. So let's get started.

illustration: oo-ep3.png
hasVideoDownload: false

tuts_hero:
    start_step:

chapters:
    extends:
        video_key: 140701988
        challenges:
            - Challenges\Extending\InheritFunctionalityCoding
            - Challenges\Extending\CallNonexistentMethodMC
    override:
        video_key: 140703255
        challenges:
            - Challenges\Override\OverrideInheritMethodCoding
            - Challenges\Override\CallOverriddenMethodMC
    protected-visibility:
        video_key: 140705348
        challenges:
            - Challenges\ProtectedVisibility\GetInheritedPropertyCoding
            - Challenges\ProtectedVisibility\PropertyVisibilityMC
    parent:
        video_key: 140706130
    abstract-ship:
        video_key: 140707815
    adding-abstract:
        video_key: 140720151
    broken-ship:
        video_key: 140711954
    pdo-ship-storage:
        video_key: 140715843
    abstract-ship-loader:
        is_finished: false
    interfaces:
        is_finished: false
